cmake_minimum_required(VERSION 3.21)
project(Radon VERSION 0.1)
file(GLOB_RECURSE SOURCES "src/*.cc")
file(GLOB_RECURSE HEADERS "include/*.h")
find_package(assimp CONFIG REQUIRED)
find_package(box2d CONFIG REQUIRED)
find_package(fmt CONFIG REQUIRED)
find_package(Freetype CONFIG REQUIRED)
find_package(glad CONFIG REQUIRED)
find_package(glfw3 CONFIG REQUIRED)
find_package(glm CONFIG REQUIRED)
find_package(ImGui CONFIG REQUIRED)
find_package(OpenAL CONFIG REQUIRED)
find_package(OpenGL REQUIRED)
find_package(pugixml CONFIG REQUIRED)
find_package(Stb REQUIRED)
find_package(tinyfiledialogs CONFIG REQUIRED)
add_executable(Radon ${SOURCES})
target_compile_features(Radon PRIVATE cxx_std_20)
if (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
  target_precompile_headers(Radon PRIVATE "include/classes/editable.h")
  ##target_precompile_headers(Radon PRIVATE "include/classes/component.h")
  target_precompile_headers(Radon PRIVATE "include/engine/telemetry.h")
  target_precompile_headers(Radon PRIVATE "include/engine/debug.h")
else()
  target_compile_definitions(Radon PRIVATE MDEBUG_DISABLE_TRACE)
endif()
target_include_directories(Radon PRIVATE ${CMAKE_SOURCE_DIR}/include)
target_include_directories(Radon PRIVATE ${Stb_INCLUDE_DIR})
target_link_libraries(Radon PRIVATE assimp::assimp)
target_link_libraries(Radon PRIVATE box2d::box2d)
target_link_libraries(Radon PRIVATE fmt::fmt)
target_link_libraries(Radon PRIVATE Freetype::Freetype)
target_link_libraries(Radon PRIVATE glad::glad)
target_link_libraries(Radon PRIVATE glfw)
target_link_libraries(Radon PRIVATE glm::glm)
target_link_libraries(Radon PRIVATE imgui::imgui)
target_link_libraries(Radon PRIVATE OpenAL::OpenAL)
target_link_libraries(Radon PRIVATE OpenGL::GL)
target_link_libraries(Radon PRIVATE pugixml::pugixml)
target_link_libraries(Radon PRIVATE tinyfiledialogs::tinyfiledialogs)
